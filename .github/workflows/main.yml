name: Deploy Spring Boot app to Lightsail on Ubuntu 20.04

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Create .env file
        run: |
          echo "DATASOURCE_URL=${{ secrets.DATASOURCE_URL }}" > .env
          echo "DATASOURCE_USERNAME=${{ secrets.DATASOURCE_USERNAME }}" >> .env
          echo "DATASOURCE_PASSWORD=${{ secrets.DATASOURCE_PASSWORD }}" >> .env

      - name: Verify .env file
        run: |
          if [ -f ".env" ]; then
            echo ".env file exists"
            ls -la .env
          else
            echo ".env file not found"
            exit 1
          fi
      - name: Install dependencies
        run: mvn install
      - name: Build with Maven
        run: mvn clean package

      - name: List contents of directory
        run: |
            ls -laR
      - name: List contents of github.workspace
        run: |
          echo "Listing contents of ${{ github.workspace }}:"
          ls -laR ${{ github.workspace }}
      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh/
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy to server
        run: |
          # Crear directorio de la aplicaci√≥n si no existe
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "mkdir -p /var/www/svecinal_backend"
          
          # Copiar archivos al servidor
          scp ${{ github.workspace }}/target/*.jar ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/var/www/svecinal_backend/
          scp ${{ github.workspace }}.env ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/var/www/svecinal_backend/.env
          
          # Crear script de servicio systemd si no existe
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "sudo tee /etc/systemd/system/svecinalapp.service << EOF
          [Unit]
          Description=Seguridad Vecinal
          After=network.target
          
          [Service]
          User=${{ secrets.SSH_USER }}
          WorkingDirectory=/home/${{ secrets.SSH_USER }}/app
          ExecStart=/usr/bin/java -jar seguridad_vecinal-0.0.1.jar
          SuccessExitStatus=143
          TimeoutStopSec=10
          Restart=on-failure
          RestartSec=5
          
          [Install]
          WantedBy=multi-user.target
          EOF"
          
          # Recargar systemd y reiniciar servicio
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "sudo systemctl daemon-reload && sudo systemctl restart svecinalapp"